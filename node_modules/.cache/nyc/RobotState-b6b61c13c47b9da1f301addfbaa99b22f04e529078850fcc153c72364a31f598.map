{"version":3,"file":"/home/anuradha/toy-robot-simulator/src/action/RobotState.ts","sources":["/home/anuradha/toy-robot-simulator/src/action/RobotState.ts"],"names":[],"mappings":";;;;;AAAA,oFAA8D;AAI9D;IAIE,oBAAY,KAAa;QACvB,IAAI,CAAC,KAAK;YAAE,MAAM,IAAI,4BAAkB,EAAE,CAAC;QAC3C,IAAI,CAAC,KAAK,GAAG;YACX,SAAS,EAAE,KAAK,CAAC,WAAW,EAAE;YAC9B,SAAS,EAAE,KAAK,CAAC,YAAY,EAAE;SAChC,CAAC;QACF,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IACtE,CAAC;IAED,6BAAQ,GAAR;QACE,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED,4BAAO,GAAP;QACE,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IACH,iBAAC;AAAD,CAAC,AApBD,IAoBC;AAED,kBAAe,UAAU,CAAC","sourcesContent":["import RobotRequiredError from '../errors/RobotRequiredError';\nimport IRobot from '../types/robot';\nimport IState, { State } from '../types/state';\n\nclass RobotState implements IState {\n  protected state: State;\n  protected date: string;\n\n  constructor(robot: IRobot) {\n    if (!robot) throw new RobotRequiredError();\n    this.state = {\n      positions: robot.getPosition(),\n      direction: robot.getDirection(),\n    };\n    this.date = new Date().toISOString().slice(0, 19).replace('T', ' ');\n  }\n\n  getState(): State {\n    return this.state;\n  }\n\n  getDate(): string {\n    return this.date;\n  }\n}\n\nexport default RobotState;\n"]}