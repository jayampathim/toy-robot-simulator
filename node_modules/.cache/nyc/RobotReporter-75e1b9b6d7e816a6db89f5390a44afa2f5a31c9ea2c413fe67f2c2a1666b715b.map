{"version":3,"file":"/home/anuradha/toy-robot-simulator/src/action/RobotReporter.ts","sources":["/home/anuradha/toy-robot-simulator/src/action/RobotReporter.ts"],"names":[],"mappings":";;AAEA;IAGE;IAAuB,CAAC;IAEV,yBAAW,GAAzB;QACE,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;YAC3B,aAAa,CAAC,QAAQ,GAAG,IAAI,aAAa,EAAE,CAAC;SAC9C;QACD,OAAO,aAAa,CAAC,QAAQ,CAAC;IAChC,CAAC;IAEM,8BAAM,GAAb,UAAc,SAA0B,EAAE,SAAyB;QAEjE,OAAU,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,SAAI,SAAW,CAAC;IAC9D,CAAC;IACH,oBAAC;AAAD,CAAC,AAhBD,IAgBC;AAED,kBAAe,aAAa,CAAC","sourcesContent":["import { IRobotReporter, RobotCoordinate, RobotDirection } from '../types/robot';\n\nclass RobotReporter implements IRobotReporter {\n  private static instance: IRobotReporter;\n\n  private constructor() {}\n\n  public static getInstance(): IRobotReporter {\n    if (!RobotReporter.instance) {\n      RobotReporter.instance = new RobotReporter();\n    }\n    return RobotReporter.instance;\n  }\n\n  public report(positions: RobotCoordinate, direction: RobotDirection): string {\n    // this reporter reports with a comma-separated string (format: X,Y,D)\n    return `${Object.values(positions).join(',')},${direction}`;\n  }\n}\n\nexport default RobotReporter;\n"]}