{"version":3,"file":"/home/anuradha/toy-robot-simulator/src/utils/logger.ts","sources":["/home/anuradha/toy-robot-simulator/src/utils/logger.ts"],"names":[],"mappings":";;;;;AAAA,gDAAqC;AACrC,kDAA4B;AAE5B;IAAA;IAsDA,CAAC;IAnDQ,YAAK,GAAZ,UAAa,KAAY;QACvB,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;QACtB,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,UAAG,GAAV,UAAW,OAAe;QACxB,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;YAClB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACrB,OAAO;SACR;QACD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;IACtC,CAAC;IAEM,WAAI,GAAX,UAAY,OAAe;QACzB,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAClB,OAAO,CAAC,GAAG,CAAC,eAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;QAClC,MAAM,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAEM,cAAO,GAAd,UAAe,OAAe;QAC5B,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAClB,OAAO,CAAC,GAAG,CAAC,eAAK,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;QAC1C,MAAM,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAEM,YAAK,GAAZ,UAAa,OAAe;QAC1B,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAClB,OAAO,CAAC,GAAG,CAAC,eAAK,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;QACxC,MAAM,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAEM,cAAO,GAAd,UAAe,KAAc;QAC3B,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC;QACnB,IAAM,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1C,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9B,CAAC;IAEM,iBAAU,GAAjB,UAAkB,OAAe;QAC/B,MAAM,CAAC,MAAM,GAAG,eAAK,CAAC,IAAI,CAAC;QAC3B,MAAM,CAAC,GAAG,CACR,gBAAM,CAAC,QAAQ,CAAC,OAAO,EAAE;YACvB,IAAI,EAAE,KAAK;YACX,gBAAgB,EAAE,SAAS;YAC3B,cAAc,EAAE,SAAS;SAC1B,CAAC,CACH,CAAC;IACJ,CAAC;IAEM,iBAAU,GAAjB,UAAkB,OAAe;QAC/B,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACzB,CAAC;IApDM,aAAM,GAAiB,IAAI,CAAC;IAqDrC,aAAC;CAAA,AAtDD,IAsDC;AAED,kBAAe,MAAM,CAAC","sourcesContent":["import chalk, { Chalk } from 'chalk';\nimport figlet from 'figlet';\n\nclass Logger {\n  static _color: Chalk | null = null;\n\n  static color(color: Chalk) {\n    Logger._color = color;\n    return this;\n  }\n\n  static log(message: string) {\n    if (!Logger._color) {\n      console.log(message);\n      return;\n    }\n    console.log(Logger._color(message));\n  }\n\n  static info(message: string) {\n    Logger.newLine(2);\n    console.log(chalk.green(message));\n    Logger.newLine();\n  }\n\n  static success(message: string) {\n    Logger.newLine(2);\n    console.log(chalk.black.bgGreen(message));\n    Logger.newLine();\n  }\n\n  static error(message: string) {\n    Logger.newLine(2);\n    console.log(chalk.white.bgRed(message));\n    Logger.newLine();\n  }\n\n  static newLine(count?: number) {\n    count = count || 1;\n    const lines = new Array(count).fill('\\n');\n    console.log(lines.join(''));\n  }\n\n  static printTitle(message: string) {\n    Logger._color = chalk.cyan;\n    Logger.log(\n      figlet.textSync(message, {\n        font: 'Big',\n        horizontalLayout: 'default',\n        verticalLayout: 'default',\n      })\n    );\n  }\n\n  static printTable(columns: object) {\n    console.table(columns);\n  }\n}\n\nexport default Logger;\n"]}